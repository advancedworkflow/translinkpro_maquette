'use client'

import { useState } from 'react'
import { 
  UserCheck, 
  Clock, 
  Car, 
  Truck, 
  ChevronLeft, 
  ChevronRight,
  Maximize,
  UserPlus,
  List,
  Eye,
  Edit,
  Filter,
  Grid3X3,
  TrendingUp,
  MapPin,
  Route,
  Activity,
  User
} from 'lucide-react'
import TruckImage, { DriverAvatar, StatusIndicator } from '../../components/ui/TruckImage'
import QuickActionModal from '../../components/ui/QuickActionModal'

export default function DashboardPage() {
  const [currentSlide, setCurrentSlide] = useState(0)
  const [quickActionModal, setQuickActionModal] = useState<{
    isOpen: boolean
    action: 'create-driver' | 'create-truck' | 'view-drivers' | 'view-trucks' | 'view-truck' | 'edit-disposition' | null
  }>({
    isOpen: false,
    action: null
  })

  const stats = [
    {
      icon: UserCheck,
      label: 'Chauffeurs actifs',
      value: '24',
      color: 'bg-gray-800'
    },
    {
      icon: Clock,
      label: 'Disponibles',
      value: '8',
      color: 'bg-gray-800'
    },
    {
      icon: Car,
      label: 'En course',
      value: '16',
      color: 'bg-gray-800'
    },
    {
      icon: Truck,
      label: 'Camions total',
      value: '32',
      color: 'bg-gray-800'
    }
  ]

  const trucks = [
    {
      id: 'T123',
      model: 'Mercedes Actros',
      driver: 'Marc Dupont',
      mileage: '145,230 km',
      fuel: '75%',
      status: 'Actif',
      statusColor: 'bg-green-100 text-green-700'
    },
    {
      id: 'T456',
      model: 'Volvo FH',
      driver: 'Julie Martin',
      mileage: '98,450 km',
      fuel: '92%',
      status: 'Disponible',
      statusColor: 'bg-green-100 text-green-700'
    },
    {
      id: 'T789',
      model: 'Scania R-Series',
      driver: 'Paul Bernard',
      mileage: '203,890 km',
      fuel: '45%',
      status: 'Maintenance',
      statusColor: 'bg-yellow-100 text-yellow-700'
    },
    {
      id: 'T101',
      model: 'MAN TGX',
      driver: 'Pierre Moreau',
      mileage: '87,320 km',
      fuel: '68%',
      status: 'Actif',
      statusColor: 'bg-green-100 text-green-700'
    }
  ]

  const activeTrips = [
    {
      id: 'TR-001',
      client: 'Marie Dubois',
      driver: 'Marc Dupont',
      vehicle: 'T123 - Mercedes Actros',
      from: 'Douala Centre',
      to: 'Yaoundé',
      progress: 65,
      eta: '2h 15min',
      status: 'En cours',
      statusColor: 'bg-green-100 text-green-700'
    },
    {
      id: 'TR-002',
      client: 'Jean Martin',
      driver: 'Julie Martin',
      vehicle: 'T456 - Volvo FH',
      from: 'Bafoussam',
      to: 'Garoua',
      progress: 30,
      eta: '4h 30min',
      status: 'En cours',
      statusColor: 'bg-green-100 text-green-700'
    },
    {
      id: 'TR-003',
      client: 'Sophie Laurent',
      driver: 'Pierre Moreau',
      vehicle: 'T101 - MAN TGX',
      from: 'Bertoua',
      to: 'Maroua',
      progress: 85,
      eta: '45min',
      status: 'En cours',
      statusColor: 'bg-green-100 text-green-700'
    }
  ]

  const chartData = {
    weeklyTrips: [
      { day: 'Lun', trips: 12 },
      { day: 'Mar', trips: 18 },
      { day: 'Mer', trips: 15 },
      { day: 'Jeu', trips: 22 },
      { day: 'Ven', trips: 28 },
      { day: 'Sam', trips: 20 },
      { day: 'Dim', trips: 16 }
    ],
    revenueData: [
      { month: 'Jan', revenue: 45000 },
      { month: 'Fév', revenue: 52000 },
      { month: 'Mar', revenue: 48000 },
      { month: 'Avr', revenue: 61000 },
      { month: 'Mai', revenue: 58000 },
      { month: 'Juin', revenue: 67000 }
    ]
  }

  const drivers = [
    {
      name: 'Marc Dupont',
      status: 'En course',
      truck: 'T123 - Mercedes Actros',
      rating: '4.8',
      lastTrip: 'Il y a 2h'
    },
    {
      name: 'Julie Martin',
      status: 'Disponible',
      truck: 'T456 - Volvo FH',
      rating: '4.9',
      lastTrip: 'Il y a 4h'
    },
    {
      name: 'Paul Bernard',
      status: 'Maintenance',
      truck: 'T789 - Scania R-Series',
      rating: '4.7',
      lastTrip: 'Il y a 1 jour'
    },
    {
      name: 'Pierre Moreau',
      status: 'En course',
      truck: 'T101 - MAN TGX',
      rating: '4.6',
      lastTrip: 'Il y a 1h'
    }
  ]

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % Math.ceil(trucks.length / 2))
  }

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + Math.ceil(trucks.length / 2)) % Math.ceil(trucks.length / 2))
  }

  const openQuickAction = (action: typeof quickActionModal.action) => {
    setQuickActionModal({ isOpen: true, action })
  }

  const closeQuickAction = () => {
    setQuickActionModal({ isOpen: false, action: null })
  }

  return (
    <div className="p-6">
      {/* Stats Section */}
      <div className="grid grid-cols-4 gap-6 mb-8">
        {stats.map((stat, index) => (
          <div key={index} className="kpi-card">
            <div className="flex items-center justify-between">
              <div>
                <div className="kpi-label">{stat.label}</div>
                <div className="kpi-value text-trust">{stat.value}</div>
              </div>
              <div className="icon-trust p-3 rounded-lg">
                <stat.icon className="w-5 h-5" />
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Trucks Carousel Section */}
      <div className="mb-8">
        <div className="dashboard-card">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-lg font-light text-gray-900">Flotte de Camions</h2>
            <div className="flex space-x-2">
              <button 
                onClick={prevSlide}
                className="btn-secondary px-3 py-1 text-xs"
              >
                <ChevronLeft className="w-4 h-4" />
              </button>
              <button 
                onClick={nextSlide}
                className="btn-secondary px-3 py-1 text-xs"
              >
                <ChevronRight className="w-4 h-4" />
              </button>
          </div>
        </div>

          <div className="relative overflow-hidden">
            <div 
              className="flex transition-transform duration-300 ease-in-out"
              style={{ transform: `translateX(-${currentSlide * 100}%)` }}
            >
              {trucks.map((truck, index) => (
                <div key={index} className="min-w-80 bg-white border border-gray-200 rounded-lg p-4 mr-4 shadow-sm">
                  <div className="flex items-start space-x-4">
                    {/* Image du camion à gauche */}
                    <div className="flex-shrink-0">
                      <TruckImage 
                        truckId={truck.id} 
                        model={truck.model} 
                        size="md" 
                        className="w-16 h-16"
                      />
                    </div>
                    
                    {/* Informations à droite */}
                    <div className="flex-1 min-w-0">
                      <div className="flex items-center justify-between mb-2">
                        <div>
                          <h3 className="text-sm font-semibold text-gray-900">Camion #{truck.id}</h3>
                          <p className="text-xs text-gray-500">{truck.model}</p>
                        </div>
                        <StatusIndicator status={truck.status} size="sm" />
                      </div>
                      
                      <div className="space-y-2 text-xs">
                        <div className="flex justify-between items-center">
                          <span className="text-gray-500">Chauffeur:</span>
                          <div className="flex items-center">
                            <DriverAvatar name={truck.driver} size="xs" className="mr-2" />
                            <span className="text-gray-900 font-medium">{truck.driver}</span>
                          </div>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-500">Kilométrage:</span>
                          <span className="text-gray-900 font-medium">{truck.mileage}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-500">Carburant:</span>
                          <span className="text-gray-900 font-medium">{truck.fuel}</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Content Grid */}
      <div className="grid grid-cols-3 gap-8">
        {/* Map Section */}
        <div className="col-span-2">
          <div className="dashboard-card">
            <div className="flex items-center justify-between mb-6">
              <h2 className="text-lg font-light text-gray-900">Localisation GPS</h2>
              <div className="flex space-x-2">
                <button className="btn-primary px-3 py-1 text-xs flex items-center">
                  <Maximize className="w-3 h-3 mr-1" />
                  Agrandir
                </button>
                <button className="btn-secondary px-3 py-1 text-xs">
                  Filtres
                </button>
              </div>
            </div>
            
            <div className="h-96 bg-gray-100 rounded relative overflow-hidden">
              <img 
                className="w-full h-full object-cover" 
                src="https://storage.googleapis.com/uxpilot-auth.appspot.com/0b39f986ca-700c58d319877730c622.png" 
                alt="GPS tracking map with truck markers, fleet management interface, red and white design"
              />
              
              <div className="absolute top-4 left-4 bg-white border border-gray-200 rounded p-3 text-xs">
                <div className="flex items-center mb-2">
                  <div className="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
                  <span>En course (16)</span>
                </div>
                <div className="flex items-center mb-2">
                  <div className="w-2 h-2 bg-trust rounded-full mr-2"></div>
                  <span>Disponible (8)</span>
                </div>
                <div className="flex items-center">
                  <div className="w-2 h-2 bg-gray-400 rounded-full mr-2"></div>
                  <span>Hors service (0)</span>
                </div>
              </div>
            </div>
          </div>
            </div>

        {/* Actions Section */}
            <div>
          <div className="bg-white border border-gray-200 rounded p-6 mb-6">
            <h2 className="text-lg font-light text-gray-900 mb-4">Actions rapides</h2>
            
            <div className="space-y-3">
              <button 
                onClick={() => openQuickAction('create-driver')}
                className="w-full border border-gray-300 text-gray-900 p-3 rounded text-sm hover:bg-gray-50 transition-colors flex items-center"
              >
                <UserPlus className="w-4 h-4 mr-3" />
                Créer chauffeur
              </button>
              
              <button 
                onClick={() => openQuickAction('create-truck')}
                className="w-full border border-gray-300 text-gray-900 p-3 rounded text-sm hover:bg-gray-50 transition-colors flex items-center"
              >
                <Truck className="w-4 h-4 mr-3" />
                Ajouter camion
              </button>
              
              <button 
                onClick={() => openQuickAction('view-drivers')}
                className="w-full border border-gray-300 text-gray-900 p-3 rounded text-sm hover:bg-gray-50 transition-colors flex items-center"
              >
                <List className="w-4 h-4 mr-3" />
                Liste des chauffeurs
              </button>
              
              <button 
                onClick={() => openQuickAction('view-trucks')}
                className="w-full border border-gray-300 text-gray-900 p-3 rounded text-sm hover:bg-gray-50 transition-colors flex items-center"
              >
                <Truck className="w-4 h-4 mr-3" />
                Liste des camions
              </button>
              
              <button 
                onClick={() => openQuickAction('view-truck')}
                className="w-full border border-gray-300 text-gray-900 p-3 rounded text-sm hover:bg-gray-50 transition-colors flex items-center"
              >
                <Eye className="w-4 h-4 mr-3" />
                Voir camion
              </button>
              
              <button 
                onClick={() => openQuickAction('edit-disposition')}
                className="w-full border border-gray-300 text-gray-900 p-3 rounded text-sm hover:bg-gray-50 transition-colors flex items-center"
              >
                <Edit className="w-4 h-4 mr-3" />
                Modifier disposition
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* Active Trips Section */}
      <div className="mt-8">
        <div className="dashboard-card">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-lg font-light text-gray-900">Courses actives</h2>
            <div className="flex space-x-2">
              <button className="btn-secondary px-3 py-1 text-xs flex items-center">
                <Activity className="w-3 h-3 mr-1" />
                Temps réel
              </button>
              <button className="btn-primary px-3 py-1 text-xs flex items-center">
                <Route className="w-3 h-3 mr-1" />
                Voir toutes
              </button>
            </div>
            </div>
          
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            {/* Active Trips List */}
            <div className="lg:col-span-2">
              <div className="space-y-4">
                {activeTrips.map((trip, index) => (
                  <div key={index} className="bg-gray-50 rounded-lg p-4">
                    <div className="flex items-center justify-between mb-3">
                      <div className="flex items-center">
                        <div className="w-8 h-8 bg-gray-800 rounded flex items-center justify-center mr-3">
                          <Truck className="w-4 h-4 text-white" />
            </div>
            <div>
                          <h3 className="text-sm font-normal text-gray-900">Course #{trip.id}</h3>
                          <p className="text-xs text-gray-500">{trip.client}</p>
                        </div>
                      </div>
                      <span className={`text-xs ${trip.statusColor} px-2 py-1 rounded`}>
                        {trip.status}
                      </span>
                    </div>
                    
                    <div className="space-y-2 text-xs mb-3">
                      <div className="flex items-center">
                        <MapPin className="w-3 h-3 mr-2 text-green-600" />
                        <span className="text-gray-500">De:</span>
                        <span className="text-gray-900 ml-1">{trip.from}</span>
                      </div>
                      <div className="flex items-center">
                        <MapPin className="w-3 h-3 mr-2 text-trust" />
                        <span className="text-gray-500">Vers:</span>
                        <span className="text-gray-900 ml-1">{trip.to}</span>
                      </div>
                      <div className="flex items-center">
                        <User className="w-3 h-3 mr-2 text-gray-600" />
                        <span className="text-gray-500">Chauffeur:</span>
                        <span className="text-gray-900 ml-1">{trip.driver}</span>
                      </div>
                    </div>
                    
                    <div className="mb-3">
                      <div className="flex justify-between text-xs text-gray-500 mb-1">
                        <span>Progression</span>
                        <span>{trip.progress}%</span>
                      </div>
                      <div className="progress-bar">
                        <div 
                          className="progress-fill"
                          style={{ width: `${trip.progress}%` }}
                        ></div>
                      </div>
                    </div>
                    
                    <div className="flex items-center justify-between">
                      <span className="text-xs text-gray-500">ETA: {trip.eta}</span>
                      <button className="btn-primary px-3 py-1 rounded text-xs">
                        Suivre GPS
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Charts Section */}
            <div className="space-y-6">
              {/* Weekly Trips Chart */}
              <div className="bg-gray-50 rounded-lg p-4">
                <h3 className="text-sm font-medium text-gray-900 mb-4 flex items-center">
                  <TrendingUp className="w-4 h-4 mr-2 text-gray-600" />
                  Courses cette semaine
                </h3>
                <div className="space-y-3">
                  {chartData.weeklyTrips.map((day, index) => (
                    <div key={index} className="flex items-center justify-between">
                      <span className="text-xs text-gray-600 w-8">{day.day}</span>
                      <div className="flex-1 mx-3">
                        <div className="w-full bg-gray-200 rounded-full h-2">
                          <div 
                            className="bg-gray-800 h-2 rounded-full"
                            style={{ width: `${(day.trips / 30) * 100}%` }}
                          ></div>
                        </div>
                      </div>
                      <span className="text-xs text-gray-900 w-8 text-right">{day.trips}</span>
                    </div>
                  ))}
                </div>
              </div>

              {/* Revenue Chart */}
              <div className="bg-gray-50 rounded-lg p-4">
                <h3 className="text-sm font-medium text-gray-900 mb-4 flex items-center">
                  <TrendingUp className="w-4 h-4 mr-2 text-green-500" />
                  Revenus (XAF)
                </h3>
                <div className="space-y-2">
                  {chartData.revenueData.map((month, index) => (
                    <div key={index} className="flex items-center justify-between">
                      <span className="text-xs text-gray-600 w-8">{month.month}</span>
                      <div className="flex-1 mx-3">
                        <div className="w-full bg-gray-200 rounded-full h-2">
                          <div 
                            className="bg-green-500 h-2 rounded-full"
                            style={{ width: `${(month.revenue / 70000) * 100}%` }}
                          ></div>
                        </div>
                      </div>
                      <span className="text-xs text-gray-900 w-12 text-right">
                        {(month.revenue / 1000).toFixed(0)}k
                      </span>
                    </div>
                  ))}
                </div>
              </div>

              {/* Quick Stats */}
              <div className="bg-gray-50 rounded-lg p-4">
                <h3 className="text-sm font-medium text-gray-900 mb-4">Statistiques rapides</h3>
                <div className="space-y-3">
                  <div className="flex justify-between items-center">
                    <span className="text-xs text-gray-600">Courses aujourd'hui</span>
                    <span className="text-sm font-medium text-gray-900">24</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-xs text-gray-600">Revenus du jour</span>
                    <span className="text-sm font-medium text-green-600">125,000 XAF</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-xs text-gray-600">Temps moyen</span>
                    <span className="text-sm font-medium text-gray-900">2h 15min</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-xs text-gray-600">Satisfaction</span>
                    <span className="text-sm font-medium text-green-600">4.8/5</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Drivers List Section */}
      <div className="mt-8">
        <div className="dashboard-card">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-lg font-light text-gray-900">Liste des chauffeurs</h2>
            <div className="flex space-x-2">
              <button className="btn-secondary px-3 py-1 text-xs flex items-center">
                <Filter className="w-3 h-3 mr-1" />
                Filtrer
              </button>
              <button className="btn-primary px-3 py-1 text-xs flex items-center">
                <Grid3X3 className="w-3 h-3 mr-1" />
                Grille
              </button>
            </div>
            </div>
          
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="border-b border-gray-100">
                <tr className="text-left">
                  <th className="pb-3 text-sm font-normal text-gray-500">Chauffeur</th>
                  <th className="pb-3 text-sm font-normal text-gray-500">Statut</th>
                  <th className="pb-3 text-sm font-normal text-gray-500">Camion assigné</th>
                  <th className="pb-3 text-sm font-normal text-gray-500">Note</th>
                  <th className="pb-3 text-sm font-normal text-gray-500">Dernière course</th>
                  <th className="pb-3 text-sm font-normal text-gray-500">Actions</th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-50">
                {drivers.map((driver, index) => (
                  <tr key={index}>
                    <td className="py-4">
                      <div className="flex items-center">
                        <div className="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center mr-3">
                          <span className="text-sm font-medium text-gray-600">
                            {driver.name.split(' ').map(n => n[0]).join('')}
                          </span>
            </div>
                        <span className="text-sm font-medium text-gray-900">{driver.name}</span>
            </div>
                    </td>
                    <td className="py-4">
                      <span className={`text-xs px-2 py-1 rounded ${
                        driver.status === 'En course' ? 'bg-green-100 text-green-700' :
                        driver.status === 'Disponible' ? 'bg-green-100 text-green-700' :
                        'bg-yellow-100 text-yellow-700'
                      }`}>
                        {driver.status}
                      </span>
                    </td>
                    <td className="py-4 text-sm text-gray-900">{driver.truck}</td>
                    <td className="py-4 text-sm text-gray-900">{driver.rating}/5</td>
                    <td className="py-4 text-sm text-gray-500">{driver.lastTrip}</td>
                    <td className="py-4">
                      <button className="text-gray-600 hover:text-trust text-sm">
                        Voir détails
                      </button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
            </div>
        </div>
      </div>

      {/* Quick Action Modal */}
      <QuickActionModal
        isOpen={quickActionModal.isOpen}
        onClose={closeQuickAction}
        action={quickActionModal.action}
      />
    </div>
  )
}